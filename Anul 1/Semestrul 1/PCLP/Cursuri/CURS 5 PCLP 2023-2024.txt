Curs 5
FOR MULTIPLU
 O instructiune for poate contine in grupul de instructiuni pe care le repeta
una sau mai multe instructiuni for.
DE RETINUT
  Cel mai din interior for creste cel mai repede ( se va termina primul).

Exemplu:
  for(i=1;i<=5;i++)
     for(j=10;j<=12;j++)
        cout<<"i="<<i<<" j="<<j<<endl;

Ce se va afisa ?
i=1 j=10
i=1 j=11
i=1 j=12
i=2 j=10
i=2 j=11
i=2 j=12
i=3 j=10
...
i=5 j=10
i=5 j=11
i=5 j=12

CARE ESTE NR. TOTAL DE REPETARI ?
 for(i=1;i<=N1;i++)
    for(j=1;j<=N2;j++)
         cout<<"*"<<endl;
Cate stelute afiseaza ? (de cate ori se repeta cout<<"*" ?)
1 1
1 2
1 3
...
1 N2
2 1
...
2 N2
..
Se repeta de N1*N2 ori.
Ex. 2:
CARE ESTE NR. TOTAL DE REPETARI ?
 for(i=1;i<=N1;i++)
    for(j=1;j<=N2;j++)
       for(k=1;k<=N3;k++)
         cout<<"*"<<endl;
Cate stelute afiseaza ? (de cate ori se repeta cout<<"*" ?)
Raspuns: N1*N2*N3
Exercitiu:
Sa se rezolve in numere naturale ecuatia:
2x+3y+4z=30
Sa se gaseasca toate tripletele (x,y,z) ce verifica ecuatia data.
Solutia: prin incercari
x:0,1,2,...,30/2
y:0,1,.....,30/3
z:0,1,2,...,30/4

int x,y,z;
for(x=0;x<=30/2;x++)
  for(y=0;y<=30/3;y++)
     for(z=0;z<=30/4;z++)
         //este solutie tripletul curent ?
         if(2*x+3*y+4*z==30)cout<<x<<"  "<<y<<"  "<<z<<endl;

Tema :
  Sa se calculeze si cate solutii sunt.
int x,y,z;
int contor=0;
for(x=0;x<=30/2;x++)
  for(y=0;y<=30/3;y++)
     for(z=0;z<=30/4;z++)
         //este solutie tripletul curent ?
         if(2*x+3*y+4*z==30){
            cout<<x<<"  "<<y<<"  "<<z<<endl;
            contor++;
         }
cout<<contor;


Exercitiu:
 Se citeste N. Se citesc N numere. Sa se afiseze pentru fiecare numar toti divizorii.
int N;
cin>>N;
int i,j;
//SE REPETA DE N ORI
//  citesc cate un numar
for(i=1;i<=N;i++){
   int nr; cout<<"nr="; cin>>nr;
   //afisare divizori:
     for(j=1;j<=nr;j++)
        if(nr%j==0)cout<<j<<"  "; 
}   
ATENTIE:
  GRESALA TIPICA : daca se foloseste aceasi variabila pt contorizare repetari !
ESTE GRESIT ASA:
for(i=1;i<=N;i++){
   int nr; cout<<"nr="; cin>>nr;
   //afisare divizori:
   for(i=1;i<=nr;i++)
        if(nr%i==0)cout<<i<<"  "; 
}   

TEMA 
Se citeste N. Se citesc N numere. Sa se afiseze care este numarul din cele N care are 
cei mai multi divizori.
Ex: N=3
13
6
4
Raspuns: 6 

INSTRUCTIUNEA FOR INFINIT
Sintaxa:
  for(;;){
    ...
  }
Repeta la infinit grupul de instructiuni

INSTRUCTIUNEA break
Sintaxa:
break;
Iese imediat dintr-o instructiune de repetare.
Exercitiu
  SE REPETA
    citim un nr 
    daca nr diferit de 0 ii afisam divizorii
  PANA CAND nr=0

#include <iostream>

using namespace std;

int main()
{
    int nr;
    for(;;){
        cout<<"nr="; cin>>nr;
        if(nr==0)break;
        for(int i=1;i<=nr;i++)
            if(nr%i==0)cout<<i<<" ";
        cout<<endl;
    }
    return 0;
}

Exercitiu (exemplu de folosire pt break;)
 Citim un numar natural. Sa se afiseze cel mai mare divizor al lui,
diferit de el insusi.
Ex: nr=15, va afisa 5
1,3,5,15 
Ex: nr=13, va afisa 1

int nr; cin>>nr;
for(i=nr/2;i>=1;i--)
   if(nr%i==0){
      cout<<"rezultat="<<i;
      break;
   }

Exercitiu
  Sa fortam citirea de la tastatura a unei note :1,2,..,10
nota=0
nota=-7
nota=5
STOP

SE REPETA
  citesc nota
PANA CAND nota>=1 AND nota<=10


for(;;){
  cout<<"nota="; cin>>nota;
  if(nota>=1 && nota<=10)break;
}
cout<<"nota introdusa: "<<nota;
Observatie:
  for(i=1;i<=10;i++)
    for(j=1;j<=8;j++){
      if(j%2==0)break;
      ...
    }
In acest caz break; NU sare din ambele for-uri. Sare doar din for(j...)
CEL MAI IMPORTANT ALGO DE LA INSTRUCTIUNEA FOR
Algoritmul de nr. prim
Nu este eficient ca sa numaram cati divizori are !
Ex:
 int nr; cin>>nr;
 int contor=2;
 int i;
 for(i=2;i<=nr/2;i++)
    if(nr%i==0)contor++;
 if(contor==2)cout<<"este prim";
 else cout<<"nu este";
ESTE CORECT, DAR NU ASA !

IMBUNATATIRI:for(i=2;i<=(int)sqrt(nr);i++)
Este suficient sa mergem pana la sqrt(nr)
Ex: nr=1000001
Merg pana la nr/2: 500000 de comparatii
Merg pana la sqrt(nr): 1000 de comparatii

TEMA
 De demonstrat (mate) ca este suficient sa mergem pana la sqrt(nr)


VARIANTA GRESITA:
int main()
{
    int nr;
    cout<<"nr="; cin>>nr;
    int i;
    for(i=2;i<=sqrt(nr);i++)
     if(nr%i==0){
        cout<<"nu este prim"<<endl;
        break;
     }
    cout<<"este prim";
    return 0;
}
Este gresit! Pt. nr=20 va scrie:
nu este prim
este prim

Tot programul de nr. prim:
#include <iostream>
#include <math.h>
using namespace std;

int main()
{
    int nr;
    cout<<"nr="; cin>>nr;
    if(nr<=1){
        cout<<"nu este nr prim";
        return 0;//iese din main()
    }
    int i;
    int estePrim=1; //semafor
    for(i=2;i<=sqrt(nr);i++)
     if(nr%i==0){
        estePrim=0;
        break;
     }
    if(estePrim==1)cout<<"este prim";
    else cout<<"nu este prim";
    return 0;
}




CALCUL CIFRE PT UN NUMAR (cand nu stim cate cifre are):
(o alta aplicatie la instructiunea for infinit)
  Algo:
    SE REPETA
      cifra=nr%10
      nr=nr/10
    PANA CAND nr=0
Ex: 1987
Sa se calculeze suma cifrelor unui nr intreg, citit.
#include <iostream>
#include <math.h>
using namespace std;

int main()
{
    int nr;
    cout<<"nr="; cin>>nr;
    //1235 suma cifre=11
    int suma=0;
    //Calculez repetat fiecare cifra:
    for(;;){
        int cifra=nr%10;
        suma=suma+cifra;
        //reduc nr:
        nr=nr/10;
        if(nr==0)break;
    }
    cout<<"suma="<<suma;
    return 0;
}

Cate cifre pare are un numar intreg citit ?
int nr; cin>>nr;
int contor=0;
//calculez cifrele:
for(;;){
  int cifra=nr%10;
  if(cifra%2==0)contor++;
  nr=nr/10;
  if(nr==0)break;
}
cout<<contor;

TEMA
 Se citeste un numar intreg. Afisati care este cea mai mare cifra a numarului.
Ex: nr=17852
    rezultat: 8

INSTRUCTIUNEA continue
  Spre deosebire de break; care iese din ciclul for, instructiunea continue; 
va iesi doar din iteratia curenta. (Sare la iteratia urmatoare)

Exemplu: facem 10 impartiri
for(i=1;i<=10;i++){
  int a; cin>>a;
  int b; cin>>b;
  //afisam rezultatul a/b
  if(b==0)continue;
  double rezultat=a/(double)b;
  cout<<rezultat<<endl;
}

Citim un numar . Sa calculam primul nr prim > numarul citit.
Ex:
  nr=14 Rezultat=17
  nr=300001 rezultat=300007
#include <iostream>
#include <math.h>
using namespace std;

int main()
{
    int nr;
    cout<<"nr="; cin>>nr;
    //Vom analiza numerele: nr+1, nr+2,......
    //Ne oprim cand gasim un numar prim
    int nrCrt=nr+1;
    for(;;){
        //este nrCrt prim?
        if(nrCrt<=1){nrCrt++;continue;}
        int estePrim=1;
        for(int i=2;i<=sqrt(nrCrt);i++)
          if(nrCrt%i==0){
            estePrim=0;
            break;
          }
        if(estePrim==1)break;
        else nrCrt++;
    }
    cout<<"rezultat="<<nrCrt;
    return 0;
}

/////////////////////////////
