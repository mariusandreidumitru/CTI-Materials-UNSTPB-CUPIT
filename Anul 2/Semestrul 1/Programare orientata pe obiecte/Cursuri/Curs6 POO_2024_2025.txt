Curs 6 POO Calc. 2

VECTORI INTRINSECI
 (sunt denumiti asa, pt a nu se confunda cu clasa Vector).
 Putem avea vectori de elemente de tip primitiv (int, double,...) sau putem avea 
vectori de obiecte. 
 In Java ei SUNT OBIECTE (se instantiaza cu new). Din ce clasa fac parte?
Fac parte dintr-o clasa intrinseca limbajului (built-in).
Ex. de instantiere pt un vector de 10 numere intregi:
int v[]=new int[10];//dimensiunea este 10
//v[0], v[1],...,v[9]

Sau, cu alta notatie:
int[] v=new int[10];
//v[10] nu exista ! Nu poate fi depasita dimensiunea

Putem avea si vectori de obiecte:
Punct p[]=new Punct[10];
sau:
Punct[] p=new Punct[10];

In clasa din care sunt instantiati vectorii, exista variabila publica de instanta,
length, in care se memoreaza automat (de la instantiere) dimensiunea vectorului.
Este o variabila read-only, putem doar s-o citim nu sa o si modificam.

Putem instantia un vector si fara new, enumerandu-i valorile initiale:
int a[]={1,2,-8};
System.out.println(a.length); //3

Putem sa dam dimensiunea vectorului ca o variabila, dar sa fie initializata.
ex:
int N;
Scanner sc=new Scanner(System.in);
N=sc.nextInt();
int a[]=new int[N];
Ex:
Cate numere pare sunt intr-un vector?
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int N; Scanner sc=new Scanner(System.in);
		System.out.print("N=");N=sc.nextInt();
		int a[]=new int[N];
		for(int i=0;i<N;i++) {
			System.out.print("nr="); 
			a[i]=sc.nextInt();
		}
		int rezultat=cateNumerePare(a);
		System.out.println("rezultat="+rezultat);
	}
	static int cateNumerePare(int a[]) {
		int contor=0;
		for(int i=0;i<a.length;i++)
			if(a[i]%2==0)contor++;
		return contor;
	}

}

Ex. 1:
Citim un nr N. Citim N numere intregi in vector a. Folosind o functie separata
sa calculam maximul din vector.
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int N;
		Scanner sc = new Scanner(System.in);
		System.out.print("N=");
		N = sc.nextInt();
		int a[] = new int[N];
		int i;
		for(i=0;i<N;i++) {
			System.out.print("nr=");
			a[i]=sc.nextInt();
		}
		int max=maxim(a);
		System.out.println("maxim="+max);

	}
	static int maxim(int a[]) {
		int rez=a[0];
		int i;
		for(i=0;i<a.length;i++)
			if(a[i]>rez)rez=a[i];
		return rez;
	}

}


Putem initializa un vector cu numere aleatoare.
Ex: Initializam un vector cu numere aleatoare.  
Sa calculam daca sunt toate diferite intre ele.
import java.util.Random;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int N; Scanner sc=new Scanner(System.in);
		System.out.print("N=");N=sc.nextInt();
		int a[]=new int[N];
		Random r=new Random();
		for(int i=0;i<N;i++) { 
			a[i]=r.nextInt(20);//0..19
			System.out.println(a[i]);
		}
		boolean rezultat=toateDiferite(a);
		System.out.println("rezultat="+rezultat);
	}
	static boolean toateDiferite(int a[]) {
		int i,j;
		for(i=0;i<a.length-1;i++)
			for(j=i+1;j<a.length;j++)
				if(a[i]==a[j])return false;
		return true;
	}

}

Sortarea unui vector :
 putem folosi metoda statica sort() ce are ca parametru vectorul, din clasa Arrays
import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int N; Scanner sc=new Scanner(System.in);
		System.out.print("N=");N=sc.nextInt();
		int a[]=new int[N];
		Random r=new Random();
		for(int i=0;i<N;i++) { 
			a[i]=r.nextInt(20);//0..19
			System.out.println(a[i]);
		}
		Arrays.sort(a);
		System.out.println("vectorul sortat:");
		for(int i=0;i<a.length;i++)
			System.out.print(" "+a[i]);
		
	}
}


VECTORI DE OBIECTE
Citim N. Citim N puncte (clasa Punct) intr-un vector de puncte.
Sa afisam daca toate punctele sunt diferite intre ele sau nu.

public class Punct {
	public int x;
	public int y;
	public Punct(int x, int y) {
		this.x = x;
		this.y = y;
	}
}


import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int N; Scanner sc=new Scanner(System.in);
		System.out.print("N=");N=sc.nextInt();
		Punct p[]=new Punct[N];
		int i;
		for(i=0;i<N;i++) {
			int xCrt; System.out.print("xCrt=");xCrt=sc.nextInt();
			int yCrt; System.out.print("yCrt=");yCrt=sc.nextInt();
			//p[i].x=xCrt;
			//p[i].y=yCrt; EROARE LA RULARE ! p[i] este null !
			p[i]=new Punct(xCrt,yCrt);
		}
		boolean rezultat=toateDiferite(p);
		System.out.println("rezultat="+rezultat);
	}
	static boolean toateDiferite(Punct p[]) {
		int i,j;
		for(i=0;i<p.length-1;i++)
			for(j=i+1;j<p.length;j++)
				if(p[i].x==p[j].x && p[i].y==p[j].y)return false;
		return true;
	}
}



MATRICI
O matrice in Java, este un caz particular de vector.
O matrice este un vector (un array) ce contine ca elemente alti vectori (fiecare linie a matricii este un vector)
Instantiere:
 int a[][]=new int[5][3];
//a[0][0],a[0][1],...,a[4][2]

Putem sa o instantiem o matrice enumerand valorile initiale.
Ex: pt valorile initiale:
1 2
7 0
5 99

int a[][]={{1,2},
           {7,0}, 
           {5,99}};
Nr. de linii: a.length
Nr. de coloane: nr. de componente ale liniei respective
              a[0].length

Putem avea matrici in care liniile au numar diferit de coloane.
Ex:
int a[][]={{1,2,3},
           {7,0}, 
           {5}};
Aici, linia i are a[i].length elemente

Ex: Cate numere pare sunt intr-o matrice
import java.util.Random;
public class Main {
	public static void main(String args[]) {
		int nL, nC;
		nL=3; nC=2;
		int a[][]=new int[nL][nC];
		//Initializam matricea cu numere aleatoare in gama 0,19:
		final int GAMA=20;
		Random r=new Random();
		int i,j;
		for(i=0;i<nL;i++)
			for(j=0;j<nC;j++)
				a[i][j]=r.nextInt(GAMA);
		//afisare in forma de tabel:
		afisare(a);
		//cate numere pare:
		int rez=nPare(a);
		System.out.println("n pare="+rez);
	}
	static void afisare(int a[][]) {
		int i,j;
		for(i=0;i<a.length;i++) {
			//afisez linia i:
			for(j=0;j<a[i].length;j++)
				System.out.print(a[i][j]+" ");
			System.out.println();
		}	
	}
	static int nPare(int a[][]) {
		int contor=0;
		int i,j;
		for(i=0;i<a.length;i++)
			for(j=0;j<a[i].length;j++)
				if(a[i][j]%2==0)contor++;
		return contor;
	}
}

Exemple
 Citim nL si nC , nr linii si nr coloane pt o matrice.
 Citim de la tastatura elementele. O afisam ca matrice. Calculam maximul din matrice,
cu o metoda separata.
import java.util.Scanner;

public class MaximMatrice {

	public static void main(String[] args) {
		int nL,nC;
		Scanner sc=new Scanner(System.in);
		System.out.print("nL=");
		nL=sc.nextInt();
		System.out.print("nC=");
		nC=sc.nextInt();
		int a[][]=new int[nL][nC];
		int i,j;
		for(i=0;i<nL;i++)
			for(j=0;j<nC;j++) {
				System.out.print("nr=");
				a[i][j]=sc.nextInt();
			}
		//afisare ca tabel:
		for(i=0;i<nL;i++) {
			//afisare linia i:
			for(j=0;j<nC;j++)
				System.out.print(a[i][j]+" ");
			System.out.println();
		}
		int maxim=calculMaxim(a);
		System.out.print("maxim="+maxim);
	}
	static int calculMaxim(int a[][]) {
		int i, j;
		int max=a[0][0];
		//for(i=0;i<nL;i++) GRESIT ! nL e var. locala in main()
		for(i=0;i<a.length;i++)
			for(j=0;j<a[i].length;j++)
				if(a[i][j]>max)max=a[i][j];
		return max;
			
			
	}

}


Modificam aplicatia a.i. din metoda calculMaxim() sa ne returneze pe langa valoarea
maximului si linia si coloana in care se gaseste.
In Java nu avem parametrii referinta ca in C, pentru a scoate mai multe rezultae prin
lista de parametrii.
In C:
void calculMaxim(int a[][100],int nL, int nC, int& max, int& linMax, int& colmax)
 
In Java nu putem face asa.
In Java, cand avem de scos mai multe rezultate dintr-o metoda, creem o clasa ce are drept
campuri (var. de instanta) rezultaele care trebuie scose, si in metoda instantiem un obiect 
din acesta clasa, ii completam campurile si il returnam.

import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		int a[][]= {{7,-9},
				    {8,10,20},
				    {8,5}};
		//afisare ca tabel:
		int i,j;
		for(i=0;i<a.length;i++) {
			//afisare linia i:
			for(j=0;j<a[i].length;j++)
				System.out.print(a[i][j]+" ");
			System.out.println();
		}
		TreiRezultate t=calculMaxim(a);
		System.out.print("maxim="+t.max+" linie="+t.linMax+" col="+t.colMax);
	}
	static TreiRezultate calculMaxim(int a[][]) {
		int i, j;
		int max=a[0][0];
		int linMax=0; int colMax=0;
		for(i=0;i<a.length;i++)
			for(j=0;j<a[i].length;j++)
				if(a[i][j]>max) {
					max=a[i][j];
					linMax=i;
					colMax=j;
				}
		TreiRezultate t=new TreiRezultate(max,linMax,colMax);
		return t;
	}
}


EX:
Sa scriem o metoda ce are ca parametru de intrare un vector de numere intregi si scoate 
doua rezultate: maximul si media aritmetica din vector 
import java.util.Scanner;

class DouaRezultate{
  public int maxim;
  public double medie;
  public DouaRezultate(in a, double b){
     maxim=a;
     medie=b;
  }
public class Main {

	public static void main(String[] args) {
		int a[]= {1,2,3,1};
		DouaRezultate d=calcule(a);
		System.out.println(d.maxim+"  "+d.medie);
	}
	static DouaRezultate calcule(int a[]) {
		int max=a[0]; double ma;
		int suma=0;
		for(int i=0;i<a.length;i++) {
			if(a[i]>max)max=a[i];
			suma=suma+a[i];
		}
		ma=suma/(double)a.length;
		DouaRezultate obj=new DouaRezultate(max,ma);
		return obj;
	}
	
}

/////////////////////////////////////////////////////////////
  